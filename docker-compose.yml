version: '3.8' 
volumes:
  db:
  cache:
  log:

networks:
  app.network:

services:  
  api:
    build:
      dockerfile: _build/api/Dockerfile
      context: .
      target: Dev
    image: webapp:latest
    container_name: api
    ports:
      - 8080
    restart: always
    depends_on:
      - mysql
      - redis
    networks:
      - app.network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./_build/nginx/namin.conf:/etc/nginx/conf.d/default.conf
      - ./_build/nginx/certs/namin.cer:/etc/ssl/certs/namin.cer
      - ./_build/nginx/certs/namin.pem:/etc/ssl/private/namin.pem
      - ./_build/nginx/certs/passphrases:/etc/ssl/private/passphrases
    restart: always
    depends_on:
      - api
      - mysql
      - redis
    ports:
      - 80:80
      - 443:443
    networks:
      - app.network

  mysql:
    build:
      dockerfile: _build/mysql/Dockerfile
      context: .
    image: mysql:8.0.23
    container_name: mysql
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --bind-address=0.0.0.0
      --transaction-isolation=READ-COMMITTED
    environment:
      - TZ=Asia/Bangkok
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    restart: always
    ports:
      - 3306
    volumes:
      - db:/var/lib/mysql
      - log:/var/log/mysql
    networks:
      - app.network

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}
    volumes:
      - cache:/data
    networks:
      - app.network