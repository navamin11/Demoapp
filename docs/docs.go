// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Mr.Navamin Sawasdee",
            "email": "navaminsawasdee@gmail.com"
        },
        "license": {
            "name": "Copyright Â© 2022 By Navamin Sawasdee. All rights reserved."
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1": {
            "get": {
                "description": "Check API server status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "operationId": "PingGetHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/about": {
            "get": {
                "description": "Get Personal, Interests and References",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "About"
                ],
                "operationId": "AboutGetHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/contact": {
            "post": {
                "description": "I will contact you soon",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "operationId": "ContactPostHandlerApi",
                "parameters": [
                    {
                        "description": "Contact me",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ContactInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/account": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "operationId": "AccountGetHandler",
                "parameters": [
                    {
                        "type": "string",
                        "format": "datetime",
                        "description": "name search by create start date (yyyy-mm-dd)",
                        "name": "st",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "datetime",
                        "description": "name search by create end date (yyyy-mm-dd)",
                        "name": "et",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "name sort asc or desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "name search by page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "format": "int",
                        "description": "name search by limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponsePage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponsePage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ResponsePage"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/login": {
            "post": {
                "description": "Login as Demo App",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "operationId": "LoginPostHandler",
                "parameters": [
                    {
                        "description": "Request username, password and return access token(JWT)",
                        "name": "authen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/register": {
            "post": {
                "description": "Register for Authentication as Demo App",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "operationId": "RegisterPostHandler",
                "parameters": [
                    {
                        "description": "Request username, password and name",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/thirdparty/bitkub/market/ticker": {
            "get": {
                "description": "Get ticker information as Bitkub",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bitkub"
                ],
                "operationId": "BKTickerGetHandler",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "sym string The symbol (optional)",
                        "name": "sym",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/thirdparty/coingecko/coins/markets": {
            "get": {
                "description": "Get coins market data as CoinGecko API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CoinsGecko"
                ],
                "operationId": "GeckoGetHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/user/logout": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout and delete access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "operationId": "LogoutDelHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/demo/user/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "My Profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "operationId": "ProfileGetHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "reset password as Demo App",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "operationId": "PasswordPatchHandler",
                "parameters": [
                    {
                        "description": "Reset password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/experience": {
            "get": {
                "description": "Get Education, Experience and Portfolio",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experience"
                ],
                "operationId": "ExperiencesGetHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/skill": {
            "get": {
                "description": "Get Technical Skills and Tools",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Skills"
                ],
                "operationId": "SkillGetHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ChangePasswordInput": {
            "type": "object",
            "required": [
                "current",
                "new",
                "retype_new"
            ],
            "properties": {
                "current": {
                    "type": "string"
                },
                "new": {
                    "type": "string"
                },
                "retype_new": {
                    "type": "string"
                }
            }
        },
        "controllers.ContactInput": {
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.RegisterInput": {
            "type": "object",
            "required": [
                "name",
                "password",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "response": {}
            }
        },
        "models.ResponsePage": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "pagination": {},
                "response": {}
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "Demoapp API",
	Description:      "Demoapp develop a RESTful API with Go 1.17 (Gin framework)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
